/*
  SASS variables are information about icon's compiled state, stored under its original file name

  .icon-home
    width: $icon-home-width

  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path

  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites
  */
$arrow-1-name: 'arrow_1'
$arrow-1-x: 0px
$arrow-1-y: 0px
$arrow-1-offset-x: 0px
$arrow-1-offset-y: 0px
$arrow-1-width: 23px
$arrow-1-height: 34px
$arrow-1-total-width: 171px
$arrow-1-total-height: 34px
$arrow-1-image: 'sprite.png'
$arrow-1: (0px, 0px, 0px, 0px, 23px, 34px, 171px, 34px, 'sprite.png', 'arrow_1', )
$arrow-2-name: 'arrow_2'
$arrow-2-x: 75px
$arrow-2-y: 0px
$arrow-2-offset-x: -75px
$arrow-2-offset-y: 0px
$arrow-2-width: 30px
$arrow-2-height: 27px
$arrow-2-total-width: 171px
$arrow-2-total-height: 34px
$arrow-2-image: 'sprite.png'
$arrow-2: (75px, 0px, -75px, 0px, 30px, 27px, 171px, 34px, 'sprite.png', 'arrow_2', )
$arrow-3-name: 'arrow_3'
$arrow-3-x: 105px
$arrow-3-y: 0px
$arrow-3-offset-x: -105px
$arrow-3-offset-y: 0px
$arrow-3-width: 33px
$arrow-3-height: 25px
$arrow-3-total-width: 171px
$arrow-3-total-height: 34px
$arrow-3-image: 'sprite.png'
$arrow-3: (105px, 0px, -105px, 0px, 33px, 25px, 171px, 34px, 'sprite.png', 'arrow_3', )
$arrow-4-name: 'arrow_4'
$arrow-4-x: 23px
$arrow-4-y: 0px
$arrow-4-offset-x: -23px
$arrow-4-offset-y: 0px
$arrow-4-width: 25px
$arrow-4-height: 32px
$arrow-4-total-width: 171px
$arrow-4-total-height: 34px
$arrow-4-image: 'sprite.png'
$arrow-4: (23px, 0px, -23px, 0px, 25px, 32px, 171px, 34px, 'sprite.png', 'arrow_4', )
$arrow-5-name: 'arrow_5'
$arrow-5-x: 48px
$arrow-5-y: 0px
$arrow-5-offset-x: -48px
$arrow-5-offset-y: 0px
$arrow-5-width: 27px
$arrow-5-height: 31px
$arrow-5-total-width: 171px
$arrow-5-total-height: 34px
$arrow-5-image: 'sprite.png'
$arrow-5: (48px, 0px, -48px, 0px, 27px, 31px, 171px, 34px, 'sprite.png', 'arrow_5', )
$arrow-6-name: 'arrow_6'
$arrow-6-x: 138px
$arrow-6-y: 0px
$arrow-6-offset-x: -138px
$arrow-6-offset-y: 0px
$arrow-6-width: 33px
$arrow-6-height: 24px
$arrow-6-total-width: 171px
$arrow-6-total-height: 34px
$arrow-6-image: 'sprite.png'
$arrow-6: (138px, 0px, -138px, 0px, 33px, 24px, 171px, 34px, 'sprite.png', 'arrow_6', )
$spritesheet-width: 171px
$spritesheet-height: 34px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($arrow-1, $arrow-2, $arrow-3, $arrow-4, $arrow-5, $arrow-6, )
$spritesheet: (171px, 34px, 'sprite.png', $spritesheet-sprites, )

/*
  The provided mixins are intended to be used with the array-like variables

  .icon-home
    @include sprite-width($icon-home)

  .icon-email
    @include sprite($icon-email)

  Example usage in HTML:
    `display: block` sprite:
    <div class="icon-home"></div>

  To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
    // CSS
    .icon {
      display: inline-block;
    }

    // HTML
    <i class="icon icon-home"></i>
  */
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(../img/#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

/*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SASS

  @include sprites($spritesheet-sprites)
  */
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
